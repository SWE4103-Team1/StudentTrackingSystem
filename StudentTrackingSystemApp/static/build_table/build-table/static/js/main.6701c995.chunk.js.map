{"version":3,"sources":["counts.js","makeData.js","ColumnsFilters/Filters.js","Tables/MasterList.js","ColumnsFilters/Columns.js","Tables/Transcript.js","App.js","reportWebVitals.js","index.js"],"names":["Counts","useState","menu","setMenu","cohortList","semesterList","cohortDropdowns","semesterDropdowns","items","setItems","title","input","value","setValue","coop","total","FIR","SOP","JUN","SEN","counts","setCounts","useEffect","url","regIdx","toLowerCase","test","axios","get","then","res","data","countCoop","countTotal","cohortItems","cohorts","cohort","push","Dropdown","Item","eventKey","semesterItems","semesters","semester","className","DropdownButton","id","variant","onSelect","e","Form","Row","Col","Table","hover","size","makeData","setData","a","getURL","window","location","hostname","console","log","fetch","response","json","map","row","fields","final_data","makeTranscript","key","length","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","onChange","target","undefined","placeholder","SelectColumnFilter","options","React","useMemo","Set","forEach","add","values","option","i","fuzzyTextFilterFn","rows","matchSorter","keys","TableMasterList","columns","modalOpen","modalClose","selectKey","modalState","selectName","filterTypes","fuzzyText","text","filter","rowValue","String","startsWith","defaultColumn","Filter","useTable","useFilters","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","visibleColumns","state","firstPageRows","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","canFilter","isSorted","isSortedDesc","colSpan","onClick","cells","cell","name","enterAdvanced","getRowProps","getCellProps","autoRemove","val","Header","accessor","columnsTranscripts","sortType","rowA","rowB","desc","arr_A","split","arr_B","Number","parseFloat","b","isNaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","disableFilters","TableTranscript","App","TranscriptData","setTranscriptData","advancedKey","advancedKeySet","transcriptName","setTranscriptName","modalShow","setModalShow","handleClose","Modal","show","onHide","closeButton","Title","Body","style","fontFamily","Footer","Button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6701c995.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  DropdownButton,\r\n  Dropdown,\r\n  Table,\r\n  Form,\r\n  Row,\r\n  Col\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function Counts() {\r\n\t// State variable that represents the list of\r\n\t// react-bootstrap dropdown items currently being displayed in\r\n\t// the count selector dropdown\r\n\tconst [menu, setMenu] = useState([]);\r\n\t// State variable that is populated only once on page render.\r\n\t// Holds two lists of react-bootstrap dropdown items, one for\r\n\t// all cohorts being stored in the db and one for all semesters\r\n\tconst [items, setItems] = useState({\r\n    \tcohortList: [],\r\n    \tsemesterList: [],\r\n    \tcohortDropdowns: [],\r\n    \tsemesterDropdowns: []\r\n\t});\r\n\t// State variable that represents the current parameter choice\r\n\tconst [value, setValue] = useState({ title: \"\", input: \"\" });\r\n\t// State variable that represents the counts being displayed to the user\r\n\tconst [counts, setCounts] = useState({\r\n\t\tcoop: 0,\r\n\t\ttotal: 0,\r\n\t\tFIR: 0,\r\n\t\tSOP: 0,\r\n\t\tJUN: 0,\r\n\t\tSEN: 0,\r\n\t});\r\n\r\n\t// Effect that makes appropriate API call based on the chosen parameter\r\n\t// and populates the counts state variable for display to user\r\n\tuseEffect(() => {\r\n    \tconst regexArr = [/\\d{4}-\\d{4}$/, /\\d{4}\\/FA|WI|SM$/];\r\n\t\tlet url = \"\";\r\n\t\tlet regIdx = 0;\r\n\r\n\t\tif (value.title.toLowerCase() === \"cohort\") {\r\n      \t\turl = \"http://127.0.0.1:8000/api/counts_cohort/\" + value.input;\r\n\t\t} else {\r\n\t\t\turl = \"http://127.0.0.1:8000/api/counts_semester/\" + value.input;\r\n\t\t\tregIdx = 1;\r\n\t\t}\r\n\r\n\t\t// Only call API if the input matches regular expression based\r\n\t\t// on parameter used\r\n\t\tif (regexArr[regIdx].test(value.input)) {\r\n\t\t\taxios.get(url).then((res) => {\r\n\t\t\t\tsetCounts({\r\n\t\t\t\t\tcoop: res.data.countCoop,\r\n\t\t\t\t\ttotal: res.data.countTotal,\r\n\t\t\t\t\tFIR: res.data.FIR,\r\n\t\t\t\t\tSOP: res.data.SOP,\r\n\t\t\t\t\tJUN: res.data.JUN,\r\n\t\t\t\t\tSEN: res.data.SEN,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}, [value]);\r\n\r\n\t// Effect that is run once on page render. Makes an API call which retrieves every unqiue\r\n\t// cohort (start date) and semester currently being stored in the database. Stores\r\n\t// these values as react-bootstrap dropdown items in the items state variable\r\n\tuseEffect(() => {\r\n\t\taxios.get(\"http://127.0.0.1:8000/api/count_parameters\").then((res) => {\r\n\t\t\tlet cohortItems = [];\r\n\t\t\tfor (const cohort of res.data.cohorts) {\r\n\t\t\t\tcohortItems.push(\r\n\t\t\t\t\t<Dropdown.Item eventKey={cohort}>{cohort}</Dropdown.Item>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tlet semesterItems = [];\r\n\t\t\tfor (const semester of res.data.semesters) {\r\n\t\t\t\tsemesterItems.push(\r\n\t\t\t\t\t<Dropdown.Item eventKey={semester}>{semester}</Dropdown.Item>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tsetItems({\r\n        \t\tcohortList: res.data.cohorts,\r\n        \t\tsemesterList: res.data.semesters,\r\n        \t\tcohortDropdowns: cohortItems,\r\n        \t\tsemesterDropdowns: semesterItems\r\n\t\t\t});\r\n\r\n\t\t\tsetValue({ title: \"Cohort\", input: res.data.cohorts[0] });\r\n\r\n\t\t\tsetMenu(cohortItems);\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className='countsCard'>\r\n\t\t\t<div className='headerDiv'>\r\n\t\t\t\t<div className='dropdownDiv'>\r\n\t\t\t\t\t<DropdownButton\r\n\t\t\t\t\t\tid='dropdown-basic-button'\r\n\t\t\t\t\t\ttitle={value.title}\r\n\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t\tonSelect={(e) => {\r\n\t\t\t\t\t\t\tif (e.toLowerCase() === \"cohort\") {\r\n                \t\t\t\tsetMenu(items.cohortDropdowns);\r\n                \t\t\t\tsetValue({ title: e, input: items.cohortList[0] });\r\n\t\t\t\t\t\t\t} else {\r\n                \t\t\t\tsetMenu(items.semesterDropdowns);\r\n                \t\t\t\tsetValue({ title: e, input: items.semesterList[0] });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Dropdown.Item eventKey='Cohort'>Cohort</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item eventKey='Semester'>Semester</Dropdown.Item>\r\n\t\t\t\t\t</DropdownButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='formDiv'>\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<DropdownButton\r\n\t\t\t\t\t\t\t\t\tid='dropdown-basic-button'\r\n\t\t\t\t\t\t\t\t\ttitle={value.input}\r\n\t\t\t\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t\t\t\t\tonSelect={(e) => setValue({ title: value.title, input: e })}>\r\n\t\t\t\t\t\t\t\t\t{menu}\r\n\t\t\t\t\t\t\t\t</DropdownButton>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='tableDiv'>\r\n\t\t\t\t<Table hover size='sm'>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t<th>Count</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody className='counts_tbody'>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>Total</td>\r\n\t\t\t\t\t\t\t<td>{counts.total}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>Coop</td>\r\n\t\t\t\t\t\t\t<td>{counts.coop}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>FIR</td>\r\n\t\t\t\t\t\t\t<td>{counts.FIR}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>SOP</td>\r\n\t\t\t\t\t\t\t<td>{counts.SOP}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>JUN</td>\r\n\t\t\t\t\t\t\t<td>{counts.JUN}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>SEN</td>\r\n\t\t\t\t\t\t\t<td>{counts.SEN}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}","export  async function makeData(setData) {\r\n\r\n  let getURL = window.location.hostname;\r\n  console.log(getURL)\r\n  if(getURL === 'localhost' || getURL === '127.0.0.1'){\r\n    const url = 'http://127.0.0.1:8000/api/student_data';\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    const final_data = await data.map(row => {\r\n      \r\n      return row.fields\r\n   })\r\n   console.log(final_data)\r\n    return setData(final_data)\r\n  }\r\n\r\n    const url = 'http://swe4103-env.eba-irrkpdyi.us-east-2.elasticbeanstalk.com/api/student_data';\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    const final_data = await data.map(row => {\r\n      \r\n      return row.fields\r\n  })\r\n  console.log(final_data)\r\n    return setData(final_data)\r\n  \r\n  }\r\n\r\n  export async function makeTranscript(key, setData) {\r\n\r\n    let getURL = window.location.hostname;\r\n    if(key.length !== 0){\r\n      if(getURL === 'localhost' || getURL === '127.0.0.1'){\r\n      \r\n        const url = \"http://127.0.0.1:8000/get_transcript/\" + key[0] + \"\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        console.log(data);\r\n    \r\n        return setData(data);\r\n      }\r\n      else{\r\n        console.log(key);\r\n        const url = \"http://swe4103-env.eba-irrkpdyi.us-east-2.elasticbeanstalk.com/get_transcript/\" + key[0] + \"\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n      \r\n    \r\n        return setData(data);\r\n      }\r\n    \r\n    }\r\n\r\n\t}","import React from \"react\";\r\nimport { matchSorter } from \"match-sorter\";\r\nexport function compareCourseCode(rowA, rowB, id, desc) {\r\n\tlet arr_A = rowA.values[id];\r\n\tarr_A = arr_A.split(\"*\");\r\n\tconsole.log(arr_A);\r\n\tlet arr_B = rowB.values[id];\r\n\r\n\tarr_B = arr_B.split(\"*\");\r\n\tconsole.log(arr_B);\r\n\tlet a = Number.parseFloat(arr_A[1]);\r\n\tlet b = Number.parseFloat(arr_B[1]);\r\n\tif (Number.isNaN(a)) {\r\n\t\t// Blanks and non-numeric strings to bottom\r\n\t\ta = desc ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\r\n\t}\r\n\tif (Number.isNaN(b)) {\r\n\t\tb = desc ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\r\n\t}\r\n\tif (a > b) return 1;\r\n\tif (a < b) return -1;\r\n\treturn 0;\r\n}\r\n\r\n// Define a filter for greater than\r\nexport function filterGreaterThan(rows, id, filterValue) {\r\n\treturn rows.filter((row) => {\r\n\t\tconst rowValue = row.values[id];\r\n\t\treturn rowValue >= filterValue;\r\n\t});\r\n}\r\n\r\n// Define a default UI for filtering\r\nexport function DefaultColumnFilter({\r\n\tcolumn: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n\tconst count = preFilteredRows.length;\r\n\r\n\treturn (\r\n\t\t<input\r\n\t\t\tvalue={filterValue || \"\"}\r\n\t\t\tonChange={(e) => {\r\n\t\t\t\tsetFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n\t\t\t}}\r\n\t\t\tplaceholder={`Search Records...`}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\nexport function NumberRangeColumnFilter({\r\n\tcolumn: { filterValue = [], preFilteredRows, setFilter, id },\r\n}) {\r\n\tconst [min, max] = React.useMemo(() => {\r\n\t\tlet min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n\t\tlet max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n\t\tpreFilteredRows.forEach((row) => {\r\n\t\t\tmin = Math.min(row.values[id], min);\r\n\t\t\tmax = Math.max(row.values[id], max);\r\n\t\t});\r\n\t\treturn [min, max];\r\n\t}, [id, preFilteredRows]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t}}>\r\n\t\t\t<input\r\n\t\t\t\tvalue={filterValue[0] || \"\"}\r\n\t\t\t\ttype='number'\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tconst val = e.target.value;\r\n\t\t\t\t\tsetFilter((old = []) => [\r\n\t\t\t\t\t\tval ? parseInt(val, 10) : undefined,\r\n\t\t\t\t\t\told[1],\r\n\t\t\t\t\t]);\r\n\t\t\t\t}}\r\n\t\t\t\tplaceholder={`Min (${min})`}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: \"70px\",\r\n\t\t\t\t\tmarginRight: \"0.5rem\",\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\tto\r\n\t\t\t<input\r\n\t\t\t\tvalue={filterValue[1] || \"\"}\r\n\t\t\t\ttype='number'\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tconst val = e.target.value;\r\n\t\t\t\t\tsetFilter((old = []) => [\r\n\t\t\t\t\t\told[0],\r\n\t\t\t\t\t\tval ? parseInt(val, 10) : undefined,\r\n\t\t\t\t\t]);\r\n\t\t\t\t}}\r\n\t\t\t\tplaceholder={`Max (${max})`}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: \"70px\",\r\n\t\t\t\t\tmarginLeft: \"0.5rem\",\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nexport function SelectColumnFilter({\r\n\tcolumn: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n\t// Calculate the options for filtering\r\n\t// using the preFilteredRows\r\n\tconst options = React.useMemo(() => {\r\n\t\tconst options = new Set();\r\n\t\tpreFilteredRows.forEach((row) => {\r\n\t\t\toptions.add(row.values[id]);\r\n\t\t});\r\n\t\treturn [...options.values()];\r\n\t}, [id, preFilteredRows]);\r\n\r\n\t// Render a multi-select box\r\n\treturn (\r\n\t\t<select\r\n\t\t\tvalue={filterValue}\r\n\t\t\tonChange={(e) => {\r\n\t\t\t\tsetFilter(e.target.value || undefined);\r\n\t\t\t}}>\r\n\t\t\t<option value=''>All</option>\r\n\t\t\t{options.map((option, i) => (\r\n\t\t\t\t<option key={i} value={option}>\r\n\t\t\t\t\t{option}\r\n\t\t\t\t</option>\r\n\t\t\t))}\r\n\t\t</select>\r\n\t);\r\n}\r\n\r\nexport function fuzzyTextFilterFn(rows, id, filterValue) {\r\n\treturn matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\r\n}\r\n","// Our table component\r\nimport {\r\n\tfuzzyTextFilterFn,\r\n\tDefaultColumnFilter,\r\n} from \"../ColumnsFilters/Filters\";\r\nimport {\r\n\tuseTable,\r\n\tuseFilters,\r\n\tuseGlobalFilter,\r\n\tuseSortBy,\r\n\tuseAsyncDebounce,\r\n} from \"react-table\";\r\nimport React from \"react\";\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = (val) => !val;\r\n\r\nexport function TableMasterList({\r\n\tcolumns,\r\n\tdata,\r\n\tmodalClose,\r\n\tmodalOpen,\r\n\tmodalState,\r\n\tselectKey,\r\n\tselectName,\r\n}) {\r\n\tfunction enterAdvanced(row) {\r\n\t\tconst key = row.cells.map((cell) => {\r\n\t\t\tif (cell.column.id === \"student_number\") {\r\n\t\t\t\treturn cell.value;\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst name = row.cells.map((cell) => {\r\n\t\t\tif (cell.column.id === \"name\") {\r\n\t\t\t\treturn cell.value;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodalOpen();\r\n\t\tselectName(name);\r\n\t\tselectKey(key);\r\n\t\tconsole.log(key);\r\n\t}\r\n\tconst filterTypes = React.useMemo(\r\n\t\t() => ({\r\n\t\t\t// Add a new fuzzyTextFilterFn filter type.\r\n\t\t\tfuzzyText: fuzzyTextFilterFn,\r\n\t\t\t// Or, override the default text filter to use\r\n\t\t\t// \"startWith\"\r\n\t\t\ttext: (rows, id, filterValue) => {\r\n\t\t\t\treturn rows.filter((row) => {\r\n\t\t\t\t\tconst rowValue = row.values[id];\r\n\t\t\t\t\treturn rowValue !== undefined\r\n\t\t\t\t\t\t? String(rowValue)\r\n\t\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t\t.startsWith(String(filterValue).toLowerCase())\r\n\t\t\t\t\t\t: true;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[]\r\n\t);\r\n\r\n\tconst defaultColumn = React.useMemo(\r\n\t\t() => ({\r\n\t\t\t// Let's set up our default Filter UI\r\n\t\t\tFilter: DefaultColumnFilter,\r\n\t\t}),\r\n\t\t[]\r\n\t);\r\n\r\n\tconst {\r\n\t\tgetTableProps,\r\n\t\tgetTableBodyProps,\r\n\t\theaderGroups,\r\n\t\trows,\r\n\t\tprepareRow,\r\n\t\tstate,\r\n\t\tvisibleColumns,\r\n\t} = useTable(\r\n\t\t{\r\n\t\t\tcolumns,\r\n\t\t\tdata,\r\n\t\t\tdefaultColumn, // Be sure to pass the defaultColumn option\r\n\t\t\tfilterTypes,\r\n\t\t},\r\n\t\tuseFilters, // useFilters!\r\n\t\tuseGlobalFilter,\r\n\t\tuseSortBy // useGlobalFilter!\r\n\t);\r\n\r\n\t// We don't want to render all of the rows for this example, so cap\r\n\t// it for this use case\r\n\tconst firstPageRows = rows;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<table className='styled-table' {...getTableProps()}>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t{headerGroups.map((headerGroup) => (\r\n\t\t\t\t\t\t<tr {...headerGroup.getHeaderGroupProps()}>\r\n\t\t\t\t\t\t\t{headerGroup.headers.map((column) => (\r\n\t\t\t\t\t\t\t\t<th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n\t\t\t\t\t\t\t\t\t{column.render(\"Header\")}\r\n\t\t\t\t\t\t\t\t\t{/* Render the columns filter UI */}\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t{column.canFilter ? column.render(\"Filter\") : null}\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t{column.isSorted\r\n\t\t\t\t\t\t\t\t\t\t\t\t? column.isSortedDesc\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"🔽\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"🔼\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"\"}{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th colSpan={visibleColumns.length}></th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody {...getTableBodyProps()}>\r\n\t\t\t\t\t{firstPageRows.map((row, i) => {\r\n\t\t\t\t\t\tprepareRow(row);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\tclassName='List_Row'\r\n\t\t\t\t\t\t\t\tonClick={() => enterAdvanced(row)}\r\n\t\t\t\t\t\t\t\t{...row.getRowProps()}>\r\n\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<td className='table-td-cell' {...cell.getCellProps()}>\r\n\t\t\t\t\t\t\t\t\t\t\t{cell.render(\"Cell\")}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t<br />\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport {\r\n\tfilterGreaterThan,\r\n\tNumberRangeColumnFilter,\r\n\tSelectColumnFilter,\r\n\tcompareCourseCode,\r\n} from \"./Filters\";\r\n\r\n// To Do: UseMemo Columns\r\nexport const columns = [\r\n\t{\r\n\t\tHeader: \" \",\r\n\t\tcolumns: [\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Student ID\",\r\n\t\t\t\taccessor: \"student_number\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Name\",\r\n\t\t\t\taccessor: \"name\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Program\",\r\n\t\t\t\taccessor: \"program\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Campus\",\r\n\t\t\t\taccessor: \"campus\",\r\n\t\t\t\tFilter: SelectColumnFilter,\r\n\t\t\t\tfilter: \"includes\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Rank\",\r\n\t\t\t\taccessor: \"rank\",\r\n\t\t\t\tFilter: SelectColumnFilter,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n\r\nexport const columnsTranscripts = [\r\n\t{\r\n\t\tHeader: \" \",\r\n\t\tcolumns: [\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Course Code\",\r\n\t\t\t\taccessor: \"Course_Code\",\r\n\t\t\t\tsortType: compareCourseCode, // custom function\r\n\t\t\t\tdisableFilters: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Course Name\",\r\n\t\t\t\taccessor: \"Course_Name\",\r\n\t\t\t\tdisableFilters: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Course Type\",\r\n\t\t\t\taccessor: \"Course_Type\",\r\n\t\t\t\tdisableFilters: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Semester\",\r\n\t\t\t\taccessor: \"Semester\",\r\n\t\t\t\tdisableFilters: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Section\",\r\n\t\t\t\taccessor: \"Section\",\r\n\t\t\t\tfilter: \"includes\",\r\n\t\t\t\tdisableFilters: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Credit Hours\",\r\n\t\t\t\taccessor: \"Credit_Hours\",\r\n\t\t\t\tdisableFilters: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Grade\",\r\n\t\t\t\taccessor: \"Grade\",\r\n\t\t\t\tdisableFilters: true,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n","import {\r\n\tfuzzyTextFilterFn,\r\n\tDefaultColumnFilter,\r\n} from \"../ColumnsFilters/Filters\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport {\r\n\tuseTable,\r\n\tuseFilters,\r\n\tuseGlobalFilter,\r\n\tuseSortBy,\r\n\tuseAsyncDebounce,\r\n} from \"react-table\";\r\nimport React from \"react\";\r\n\r\nexport function TableTranscript({\r\n\tcolumns,\r\n\tdata,\r\n\tmodalClose,\r\n\tmodalOpen,\r\n\tmodalState,\r\n\tselectKey,\r\n\tselectName,\r\n}) {\r\n\tconst filterTypes = React.useMemo(\r\n\t\t() => ({\r\n\t\t\t// Add a new fuzzyTextFilterFn filter type.\r\n\t\t\tfuzzyText: fuzzyTextFilterFn,\r\n\t\t\t// Or, override the default text filter to use\r\n\t\t\t// \"startWith\"\r\n\t\t\ttext: (rows, id, filterValue) => {\r\n\t\t\t\treturn rows.filter((row) => {\r\n\t\t\t\t\tconst rowValue = row.values[id];\r\n\t\t\t\t\treturn rowValue !== undefined\r\n\t\t\t\t\t\t? String(rowValue)\r\n\t\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t\t.startsWith(String(filterValue).toLowerCase())\r\n\t\t\t\t\t\t: true;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[]\r\n\t);\r\n\r\n\tconst {\r\n\t\tgetTableProps,\r\n\t\tgetTableBodyProps,\r\n\t\theaderGroups,\r\n\t\trows,\r\n\t\tprepareRow,\r\n\t\tstate,\r\n\t\tvisibleColumns,\r\n\t} = useTable(\r\n\t\t{\r\n\t\t\tcolumns,\r\n\t\t\tdata,\r\n\t\t\t// Be sure to pass the defaultColumn option\r\n\t\t\tfilterTypes,\r\n\t\t},\r\n\t\tuseFilters, // useFilters!\r\n\t\tuseGlobalFilter,\r\n\t\tuseSortBy // useGlobalFilter!\r\n\t);\r\n\r\n\t// We don't want to render all of the rows for this example, so cap\r\n\t// it for this use case\r\n\tconst firstPageRows = rows;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table className='styled-transcript' {...getTableProps()}>\r\n\t\t\t\t<thead className='styled-transcript-thead'>\r\n\t\t\t\t\t{headerGroups.map((headerGroup) => (\r\n\t\t\t\t\t\t<tr {...headerGroup.getHeaderGroupProps()}>\r\n\t\t\t\t\t\t\t{headerGroup.headers.map((column) => (\r\n\t\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\t\tclassName='transcript_head'\r\n\t\t\t\t\t\t\t\t\t{...column.getHeaderProps(column.getSortByToggleProps())}>\r\n\t\t\t\t\t\t\t\t\t{column.render(\"Header\")}\r\n\t\t\t\t\t\t\t\t\t{/* Render the columns filter UI */}\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t{column.canFilter ? column.render(\"Filter\") : null}\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t{column.isSorted\r\n\t\t\t\t\t\t\t\t\t\t\t\t? column.isSortedDesc\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"🔽\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"🔼\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"\"}{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th colSpan={visibleColumns.length}></th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody className='styled-transcript-tbody' {...getTableBodyProps()}>\r\n\t\t\t\t\t{firstPageRows.map((row, i) => {\r\n\t\t\t\t\t\tprepareRow(row);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<tr {...row.getRowProps()}>\r\n\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<td className='transcript_cell' {...cell.getCellProps()}>\r\n\t\t\t\t\t\t\t\t\t\t\t{cell.render(\"Cell\")}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t\t<br />\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Counts from \"./counts\";\r\n// A great library for fuzzy filtering/sorting items\r\n\r\nimport \"./App.css\";\r\nimport { makeData, makeTranscript } from \"./makeData\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { TableMasterList } from \"./Tables/MasterList\";\r\n\r\nimport { columns } from \"./ColumnsFilters/Columns\";\r\nimport { transcriptModal } from \"./Modal/TranscriptModal\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { TableTranscript } from \"./Tables/Transcript\";\r\nimport { columnsTranscripts } from \"./ColumnsFilters/Columns\";\r\n\r\nfunction App() {\r\n\tconst [data, setData] = React.useState([]);\r\n\tconst [TranscriptData, setTranscriptData] = React.useState([]);\r\n\r\n\tconst [advancedKey, advancedKeySet] = React.useState([]);\r\n\tconst [transcriptName, setTranscriptName] = React.useState(\"\");\r\n\r\n\tconst [modalShow, setModalShow] = React.useState(false);\r\n\tconst handleClose = () => setModalShow(false);\r\n\tconst handleShow = () => setModalShow(true);\r\n\tconsole.log(modalShow);\r\n\tReact.useEffect(() => {\r\n\t\t(async () => {\r\n\t\t\tawait makeData(setData);\r\n\t\t})();\r\n\t}, []);\r\n\r\n\tReact.useEffect(() => {\r\n\t\t(async () => {\r\n\t\t\tawait makeTranscript(advancedKey, setTranscriptData);\r\n\t\t})();\r\n\t}, [advancedKey]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='master-container'>\r\n\t\t\t\t<div className='div-table'>\r\n\t\t\t\t\t<Modal\r\n\t\t\t\t\t\tshow={modalShow}\r\n\t\t\t\t\t\tonHide={handleClose}\r\n\t\t\t\t\t\taria-labelledby='example-modal-sizes-title-lg'\r\n\t\t\t\t\t\tsize='xl'>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Transcript</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<div className='row_modal'>\r\n\t\t\t\t\t\t\t\t<div className='column_modal'>\r\n\t\t\t\t\t\t\t\t\t<TableTranscript\r\n\t\t\t\t\t\t\t\t\t\tcolumns={columnsTranscripts}\r\n\t\t\t\t\t\t\t\t\t\tdata={TranscriptData}></TableTranscript>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='column_modal'>\r\n\t\t\t\t\t\t\t\t\t<h1 style={{ fontFamily: \"sans-serif\" }}>{transcriptName}</h1>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<h2 style={{ fontFamily: \"sans-serif\" }}>{advancedKey}</h2>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant='secondary' onClick={handleClose}>\r\n\t\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t\t<TableMasterList\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\tmodalClose={handleClose}\r\n\t\t\t\t\t\tmodalOpen={handleShow}\r\n\t\t\t\t\t\tmodalState={modalShow}\r\n\t\t\t\t\t\tselectKey={advancedKeySet}\r\n\t\t\t\t\t\tselectName={setTranscriptName}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='div-counts'>\r\n\t\t\t\t\t<Counts></Counts>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\r\n    <App />,\r\n \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}