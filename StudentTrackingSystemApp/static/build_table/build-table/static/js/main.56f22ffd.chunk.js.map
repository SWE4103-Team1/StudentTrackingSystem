{"version":3,"sources":["counts.js","textAudits.js","makeData.js","ColumnsFilters/Filters.js","checkBox.js","Tables/MasterList.js","ColumnsFilters/Columns.js","Tables/Transcript.js","Tables/AuditCSE.js","Tables/InAppAudit.js","App.js","reportWebVitals.js","index.js"],"names":["Counts","useState","menu","setMenu","cohortList","semesterList","cohortDropdowns","semesterDropdowns","items","setItems","title","input","value","setValue","coop","total","FIR","SOP","JUN","SEN","counts","setCounts","useEffect","url","regIdx","getURL","window","location","hostname","toLowerCase","test","axios","get","then","res","data","countCoop","countTotal","cohortItems","cohorts","cohort","push","Dropdown","Item","eventKey","semesterItems","semesters","semester","className","DropdownButton","id","variant","onSelect","e","Form","Row","Col","Table","hover","size","TextAuditButton","checked","buttonVariant","audits","auditLoading","setAuditLoading","getAuditData","sid","a","response","parseAuditData","lines","student","courses","header","concat","Object","entries","course","courseData","completed","completedCH","remaining","remainingCH","inProgress","inProgressCH","courseHeader","length","toString","completedBody","i","inProgressBody","remainingBody","cse","totalITS","totalITSCH","totalHSS","totalHSSCH","totalOPEN","totalCSECH","totalCSERemaining","totalCSECHRemaining","cseHeader","cseCourse","cseData","code","join","promiseArr","key","zip","JSZip","Promise","all","responses","resp","file","generateAsync","type","content","saveAs","Button","disabled","onClick","makeData","setData","fetch","json","map","row","fields","final_data","makeTranscript","settranscriptLoading","InAppAudit","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","onChange","target","undefined","placeholder","SelectColumnFilter","options","React","useMemo","Set","forEach","add","values","option","fuzzyTextFilterFn","rows","matchSorter","keys","CheckBox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","current","TableMasterList","columns","modalOpen","modalClose","selectKey","modalState","selectRow","updateChecked","setTranLoad","enterAdvanced","cell","cells","name","rank","program","status","campus","filterTypes","fuzzyText","text","filter","rowValue","String","startsWith","defaultColumn","Filter","useTable","useFilters","useGlobalFilter","useSortBy","useRowSelect","hooks","visibleColumns","Header","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","selectedFlatRows","state","SIDs","firstPageRows","headerGroup","index","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","canFilter","isSorted","isSortedDesc","getRowProps","getCellProps","style","padding","autoRemove","val","accessor","sortType","rowA","rowB","desc","arr_A","arr_B","b","Number","isNaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","columnsTranscripts","split","parseFloat","disableFilters","TableTranscript","selectName","colSpan","AuditCSE","CSEDataIN","CSEData","courseTypes","styles","outterMostDiv","float","in_progress","courseType","credit_hours","item","Audit","CourseCode","display","font","fontSize","wordBreak","div_style","boxShadow","CourseHeaders","paddingBottom","paddingTop","Parent_Div","progress","target_student","student_number","years_in","base_program","CORE","TE","num_courses","NS","App","TranscriptData","setTranscriptData","showAudit","setShowAudit","advancedKey","advancedKeySet","transcriptLoading","transcriptInfo","setTranscriptInfo","checkedSIDs","setCheckedSIDs","modalShow","setModalShow","handleClose","auditData","setAuditData","Transcript","audit","Modal","show","onHide","closeButton","Body","Footer","fontFamily","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.56f22ffd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  DropdownButton,\r\n  Dropdown,\r\n  Table,\r\n  Form,\r\n  Row,\r\n  Col\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function Counts() {\r\n\t// State variable that represents the list of\r\n\t// react-bootstrap dropdown items currently being displayed in\r\n\t// the count selector dropdown\r\n\tconst [menu, setMenu] = useState([]);\r\n\t// State variable that is populated only once on page render.\r\n\t// Holds two lists of react-bootstrap dropdown items, one for\r\n\t// all cohorts being stored in the db and one for all semesters\r\n\tconst [items, setItems] = useState({\r\n    \tcohortList: [],\r\n    \tsemesterList: [],\r\n    \tcohortDropdowns: [],\r\n    \tsemesterDropdowns: []\r\n\t});\r\n\t// State variable that represents the current parameter choice\r\n\tconst [value, setValue] = useState({ title: \"\", input: \"\" });\r\n\t// State variable that represents the counts being displayed to the user\r\n\tconst [counts, setCounts] = useState({\r\n\t\tcoop: 0,\r\n\t\ttotal: 0,\r\n\t\tFIR: 0,\r\n\t\tSOP: 0,\r\n\t\tJUN: 0,\r\n\t\tSEN: 0,\r\n\t});\r\n\r\n\t// Effect that makes appropriate API call based on the chosen parameter\r\n\t// and populates the counts state variable for display to user\r\n\tuseEffect(() => {\r\n    \tconst regexArr = [/\\d{4}-\\d{4}$/, /\\d{4}\\/FA|WI|SM$/];\r\n\t\tlet url = \"\";\r\n\t\tlet regIdx = 0;\r\n\t\tlet getURL = window.location.hostname;\r\n\t\tif(getURL === 'localhost' || getURL === '127.0.0.1'){\r\n\t\t\tif (value.title.toLowerCase() === \"cohort\") {\r\n\t\t\t\turl = \"http://\"+getURL+\":8000/api/counts_cohort/\" + value.input;\r\n\t\t  } else {\r\n\t\t\t  url = \"http://\"+getURL+\":8000/api/counts_semester/\" + value.input;\r\n\t\t\t  regIdx = 1;\r\n\t\t  }\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif (value.title.toLowerCase() === \"cohort\") {\r\n\t\t\t\turl = \"http://\"+getURL+\"/api/counts_cohort/\" + value.input;\r\n\t\t  } else {\r\n\t\t\t  url = \"http://\"+getURL+\"/api/counts_semester/\" + value.input;\r\n\t\t\t  regIdx = 1;\r\n\t\t  }\r\n\t\t}\r\n\t\t\r\n\r\n\t\t// Only call API if the input matches regular expression based\r\n\t\t// on parameter used\r\n\t\tif (regexArr[regIdx].test(value.input)) {\r\n\t\t\taxios.get(url).then((res) => {\r\n\t\t\t\tsetCounts({\r\n\t\t\t\t\tcoop: res.data.countCoop,\r\n\t\t\t\t\ttotal: res.data.countTotal,\r\n\t\t\t\t\tFIR: res.data.FIR,\r\n\t\t\t\t\tSOP: res.data.SOP,\r\n\t\t\t\t\tJUN: res.data.JUN,\r\n\t\t\t\t\tSEN: res.data.SEN,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}, [value]);\r\n\r\n\t// Effect that is run once on page render. Makes an API call which retrieves every unqiue\r\n\t// cohort (start date) and semester currently being stored in the database. Stores\r\n\t// these values as react-bootstrap dropdown items in the items state variable\r\n\tuseEffect(() => {\r\n\r\n\r\n\t\tlet getURL = window.location.hostname;\r\n\t\tif(getURL === 'localhost' || getURL === '127.0.0.1'){\r\n\t\t\taxios.get(\"http://\"+getURL+\":8000/api/count_parameters\").then((res) => {\r\n\t\t\t\tlet cohortItems = [];\r\n\t\t\t\tfor (const cohort of res.data.cohorts) {\r\n\t\t\t\t\tcohortItems.push(\r\n\t\t\t\t\t\t<Dropdown.Item eventKey={cohort}>{cohort}</Dropdown.Item>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlet semesterItems = [];\r\n\t\t\t\tfor (const semester of res.data.semesters) {\r\n\t\t\t\t\tsemesterItems.push(\r\n\t\t\t\t\t\t<Dropdown.Item eventKey={semester}>{semester}</Dropdown.Item>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tsetItems({\r\n\t\t\t\t\tcohortList: res.data.cohorts,\r\n\t\t\t\t\tsemesterList: res.data.semesters,\r\n\t\t\t\t\tcohortDropdowns: cohortItems,\r\n\t\t\t\t\tsemesterDropdowns: semesterItems\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tsetValue({ title: \"Cohort\", input: res.data.cohorts[0] });\r\n\t\r\n\t\t\t\tsetMenu(cohortItems);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse{\r\n\t\t\taxios.get(\"http://\"+getURL+\"/api/count_parameters\").then((res) => {\r\n\t\t\t\tlet cohortItems = [];\r\n\t\t\t\tfor (const cohort of res.data.cohorts) {\r\n\t\t\t\t\tcohortItems.push(\r\n\t\t\t\t\t\t<Dropdown.Item eventKey={cohort}>{cohort}</Dropdown.Item>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlet semesterItems = [];\r\n\t\t\t\tfor (const semester of res.data.semesters) {\r\n\t\t\t\t\tsemesterItems.push(\r\n\t\t\t\t\t\t<Dropdown.Item eventKey={semester}>{semester}</Dropdown.Item>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tsetItems({\r\n\t\t\t\t\tcohortList: res.data.cohorts,\r\n\t\t\t\t\tsemesterList: res.data.semesters,\r\n\t\t\t\t\tcohortDropdowns: cohortItems,\r\n\t\t\t\t\tsemesterDropdowns: semesterItems\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tsetValue({ title: \"Cohort\", input: res.data.cohorts[0] });\r\n\t\r\n\t\t\t\tsetMenu(cohortItems);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className='countsCard'>\r\n\t\t\t<div className='headerDiv'>\r\n\t\t\t\t<div className='dropdownDiv'>\r\n\t\t\t\t\t<DropdownButton\r\n\t\t\t\t\t\tid='dropdown-basic-button'\r\n\t\t\t\t\t\ttitle={value.title}\r\n\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t\tonSelect={(e) => {\r\n\t\t\t\t\t\t\tif (e.toLowerCase() === \"cohort\") {\r\n                \t\t\t\tsetMenu(items.cohortDropdowns);\r\n                \t\t\t\tsetValue({ title: e, input: items.cohortList[0] });\r\n\t\t\t\t\t\t\t} else {\r\n                \t\t\t\tsetMenu(items.semesterDropdowns);\r\n                \t\t\t\tsetValue({ title: e, input: items.semesterList[0] });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Dropdown.Item eventKey='Cohort'>Cohort</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item eventKey='Semester'>Semester</Dropdown.Item>\r\n\t\t\t\t\t</DropdownButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='formDiv'>\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<DropdownButton\r\n\t\t\t\t\t\t\t\t\tid='dropdown-basic-button'\r\n\t\t\t\t\t\t\t\t\ttitle={value.input}\r\n\t\t\t\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t\t\t\t\tonSelect={(e) => setValue({ title: value.title, input: e })}>\r\n\t\t\t\t\t\t\t\t\t{menu}\r\n\t\t\t\t\t\t\t\t</DropdownButton>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='tableDiv'>\r\n\t\t\t\t<Table hover size='sm'>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t<th>Count</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody className='counts_tbody'>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>Total</td>\r\n\t\t\t\t\t\t\t<td>{counts.total}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>Coop</td>\r\n\t\t\t\t\t\t\t<td>{counts.coop}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>FIR</td>\r\n\t\t\t\t\t\t\t<td>{counts.FIR}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>SOP</td>\r\n\t\t\t\t\t\t\t<td>{counts.SOP}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>JUN</td>\r\n\t\t\t\t\t\t\t<td>{counts.JUN}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>SEN</td>\r\n\t\t\t\t\t\t\t<td>{counts.SEN}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nimport JSZip from \"jszip\"\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function TextAuditButton({checked, buttonVariant}) {\r\n    // A dictionary which contains the audit information for each student being audited\r\n    // Key is student number, value is audit information gathered from InAppAudit\r\n    let audits = {};\r\n\r\n    // Keeps track of whether or not we are fetching api for audit data\r\n    const [auditLoading, setAuditLoading] = useState(false);\r\n\r\n    const getAuditData = async (sid) => {\r\n        let getURL = window.location.hostname;\r\n        let url = ((getURL === 'localhost' || getURL === '127.0.0.1') ? \r\n            \"http://\"+ getURL + \":8000/audit_student/\" + sid + \"\" : \r\n            \"http://\" + getURL + \"/audit_student/\" + sid + \"\");\r\n\r\n        let response = await axios.get(url);\r\n        return response.data;\r\n    }\r\n\r\n    // Time to build the biggest string :)\r\n    const parseAuditData = (data) => {\r\n        let lines = [];\r\n\r\n        let student = data[\"target_student\"];\r\n        let courses = {\r\n            \"CORE\": data[\"progress\"][\"CORE\"],\r\n            \"TE\": data[\"progress\"][\"TE\"],\r\n            \"NS\": data[\"progress\"][\"NS\"],\r\n            \"CSE\": {\r\n                \"ITS\": data[\"progress\"][\"CSE-ITS\"],\r\n                \"HSS\": data[\"progress\"][\"CSE-HSS\"],\r\n                \"OPEN\": data[\"progress\"][\"CSE-OPEN\"]\r\n            }\r\n        }\r\n\r\n        let header = [\r\n            \"Audit: \", student['student_number'], \" - \", \r\n            student['full_name'], \", \", student['cohort'], \r\n            \", \", student['rank'], \", years in: \", student['years_in'],\r\n            \"\\nBased on: \", data['base_program'], \" program, as of \", data['latest_enrolment_term'],\r\n            \"\\n\\n\\tSTATUS: \", student['status'],\r\n        ]\r\n\r\n        lines = lines.concat(header);\r\n\r\n        //This builds the CORE, TE, and NS portions of audit\r\n\t    for (const [course, courseData] of Object.entries(courses))\r\n        {\r\n\t\t    if (course === \"CSE\") break;\r\n\r\n\t\t    let completed = courseData[\"completed\"][\"courses\"];\r\n\t\t    let completedCH = courseData[\"completed\"][\"credit_hours\"];\r\n\t\t    let remaining = (course === \"CORE\") ? courseData[\"remaining\"][\"courses\"] : courseData[\"remaining\"][\"num_courses\"];\r\n\t\t    let remainingCH = courseData[\"remaining\"][\"credit_hours\"];\r\n\t\t    let inProgress = courseData[\"in_progress\"][\"courses\"];\r\n\t\t    let inProgressCH = courseData[\"in_progress\"][\"credit_hours\"];\r\n\r\n\t\t    let totalCourses = (course === \"CORE\") ? completed.length + remaining.length + inProgress.length : completed.length + remaining + inProgress.length;\r\n\t\t    let totalCH = completedCH + remainingCH + inProgressCH;\r\n\t\t    let coursesRemaining = (course === \"CORE\") ? remaining.length : remaining;\r\n\r\n\t\t    let courseHeader = [\r\n\t\t    \t\"\\n\\n==========================================================================\\n\",\r\n\t\t    \t\"Progress through \", course, \" (\", totalCourses, \" courses, \", totalCH, \" CH)    \",\r\n\t\t    \tcoursesRemaining.toString(), \" courses (\", remainingCH.toString(), \"CH) REMAINING\\n\",\r\n\t\t    \t\"==========================================================================\\n\",\r\n\t\t    ]\r\n\r\n\t\t    lines = lines.concat(courseHeader)\r\n\r\n            if (course === \"CORE\") \r\n            {\r\n                lines = lines.concat([\"()** indicates equivelent course replacement\\n\\n\",]);\r\n            }\r\n            else\r\n            {\r\n                lines = lines.concat([\"\\n\"]);\r\n            }\r\n\r\n\t\t    let completedBody = [\r\n\t\t    \tcourse, \" courses completed:    \", completed.length.toString(), \" courses (\", completedCH.toString(), \"CH)\\n\",\r\n\t\t    \t\"---------------------------------------------\\n\"\r\n\t\t    ]\t\r\n\r\n            for (let i = 0; i < completed.length; ++i)\r\n            {\r\n                if (i > 1 && i % 5 === 0)\r\n                {\r\n                    completedBody = completedBody.concat([completed[i], \"\\n\"]);\r\n                }\r\n                else\r\n                {\r\n                    completedBody = completedBody.concat([completed[i], \", \"]);\r\n                }\r\n            }\r\n\r\n            completedBody = completedBody.concat([\"\\n\\n\"]);\r\n\r\n\t\t    lines = lines.concat(completedBody)\r\n\r\n\t\t    let inProgressBody = [\r\n\t\t    \tcourse, \" courses in progress:    \", inProgress.length.toString(), \" courses (\", inProgressCH.toString(), \"CH)\\n\",\r\n\t\t    \t\"---------------------------------------------\\n\"\r\n\t\t    ]\r\n\r\n            for (let i = 0; i < inProgress.length; ++i)\r\n            {\r\n                if (i > 1 && i % 5 === 0)\r\n                {\r\n                    inProgressBody = inProgressBody.concat([inProgress[i], \"\\n\"]);\r\n                }\r\n                else\r\n                {\r\n                    inProgressBody = inProgressBody.concat([inProgress[i], \", \"]);\r\n                }\r\n            }\r\n\r\n            inProgressBody = inProgressBody.concat([\"\\n\\n\"]);\r\n\r\n\t\t    lines = lines.concat(inProgressBody)\r\n\r\n\t\t    if (course === \"CORE\")\r\n            {\r\n\t\t    \tlet remainingBody = [\r\n\t\t    \t\tcourse, \" courses remaining:    \", remaining.length.toString(), \" courses (\", remainingCH.toString(), \"CH)\\n\",\r\n\t\t    \t\t\"---------------------------------------------\\n\"\r\n\t\t    \t]\r\n\r\n                for (let i = 0; i < remaining.length; ++i)\r\n                {\r\n                    if (i > 1 && i % 5 === 0)\r\n                    {\r\n                        remainingBody = remainingBody.concat([remaining[i], \"\\n\"]);\r\n                    }\r\n                    else\r\n                    {\r\n                        remainingBody = remainingBody.concat([remaining[i], \", \"]);\r\n                    }\r\n                }\r\n\r\n                remainingBody = remainingBody.concat([\"\\n\\n\"]);\r\n            \r\n\t\t    \tlines = lines.concat(remainingBody)\r\n            }\r\n        }\r\n\r\n        // CSE TIME!\r\n        let cse = courses[\"CSE\"];\r\n        let totalITS = cse[\"ITS\"][\"completed\"][\"courses\"].length + cse[\"ITS\"][\"remaining\"][\"num_courses\"] + cse[\"ITS\"][\"in_progress\"][\"courses\"].length;\r\n        let totalITSCH = cse[\"ITS\"][\"completed\"][\"credit_hours\"] + cse[\"ITS\"][\"remaining\"][\"credit_hours\"] + cse[\"ITS\"][\"in_progress\"][\"credit_hours\"];\r\n        let totalHSS = cse[\"HSS\"][\"completed\"][\"courses\"].length + cse[\"HSS\"][\"remaining\"][\"num_courses\"] + cse[\"HSS\"][\"in_progress\"][\"courses\"].length;\r\n        let totalHSSCH = cse[\"HSS\"][\"completed\"][\"credit_hours\"] + cse[\"HSS\"][\"remaining\"][\"credit_hours\"] + cse[\"HSS\"][\"in_progress\"][\"credit_hours\"];\r\n        let totalOPEN = cse[\"OPEN\"][\"completed\"][\"courses\"].length + cse[\"OPEN\"][\"remaining\"][\"num_courses\"] + cse[\"OPEN\"][\"in_progress\"][\"courses\"].length;\r\n        let totalOPENCH = cse[\"OPEN\"][\"completed\"][\"credit_hours\"] + cse[\"OPEN\"][\"remaining\"][\"credit_hours\"] + cse[\"OPEN\"][\"in_progress\"][\"credit_hours\"];\r\n\r\n        let totalCSECH = totalITSCH + totalHSSCH + totalOPENCH;\r\n        let totalCSERemaining = cse[\"HSS\"][\"remaining\"][\"num_courses\"] + cse[\"ITS\"][\"remaining\"][\"num_courses\"] + cse[\"OPEN\"][\"remaining\"][\"num_courses\"];\r\n        let totalCSECHRemaining = cse[\"HSS\"][\"remaining\"][\"credit_hours\"] + cse[\"ITS\"][\"remaining\"][\"credit_hours\"] + cse[\"OPEN\"][\"remaining\"][\"credit_hours\"];\r\n\r\n        let cseHeader = [\r\n            \"\\n\\n==========================================================================\\n\",\r\n            \"Progress through CSE (\", totalITS.toString(), \" ITS, \", totalHSS.toString(), \" HSS, \", \r\n            totalOPEN.toString(), \" OPEN; \", totalCSECH.toString(), \"CH)     \",\r\n            totalCSERemaining.toString(), \" courses (\", totalCSECHRemaining.toString(), \") REMAINING\\n\",\r\n            \"==========================================================================\\n\",\r\n        ];\r\n\r\n        lines = lines.concat(cseHeader);\r\n\r\n        for (const [cseCourse, cseData] of Object.entries(cse))\r\n        {\r\n            let completed = cseData[\"completed\"][\"courses\"];\r\n            let inProgress = cseData[\"in_progress\"][\"courses\"]\r\n\r\n            if (completed.length > 0)\r\n            {\r\n                lines = lines.concat([\"CSE-\", cseCourse, \" \", completed.length.toString(), \" (\",\r\n                cseData[\"completed\"][\"credit_hours\"].toString(), \"ch) complete: \"\r\n                ])\r\n\r\n                for (const code of completed)\r\n                {\r\n                    lines = lines.concat([code, \", \"])\r\n                }\r\n\r\n                lines = lines.concat([\"\\n\"]);\r\n            }\r\n\r\n            if (inProgress.length > 0)\r\n            {\r\n                lines = lines.concat([\"CSE-\", cseCourse, \" \", inProgress.length.toString(), \" (\",\r\n                cseData[\"in_progress\"][\"credit_hours\"].toString(), \"ch) inprogress: \"\r\n                ])\r\n\r\n                for (const code of inProgress)\r\n                {\r\n                    lines = lines.concat([code, \", \"])\r\n                }\r\n\r\n                lines = lines.concat([\"\\n\"]);\r\n            }\r\n        }\r\n\r\n        lines = lines.concat([\"\\n\\n\"]);\r\n\r\n        return lines.join('');\r\n    }\r\n\r\n    // Fires each time Generate Text Audit button is pressed\r\n    useEffect(() => {\r\n        if (auditLoading)\r\n        {\r\n            // FETCH THE AUDIT INFORMATION FOR EACH STUDENT REQUESTED\r\n            let promiseArr = [];\r\n            for (const key of checked)\r\n            {\r\n                promiseArr.push(getAuditData(key));\r\n            }\r\n\r\n            // Create new object for zipping\r\n            let zip = new JSZip();\r\n\r\n            Promise.all(promiseArr).then(responses => {\r\n                for (const resp of responses)\r\n                {\r\n                    audits[resp[\"target_student\"][\"student_number\"]] = resp;\r\n                }\r\n\r\n                for (const [sid, data] of Object.entries(audits))\r\n                {\r\n                    // Add audit file for sid to zip file\r\n                    zip.file(sid + \"-audit.txt\", parseAuditData(data));\r\n                }\r\n\r\n                // Save zip file\r\n                zip.generateAsync({type: \"blob\"}).then(content => {\r\n                    saveAs(content, \"audits.zip\");\r\n                });\r\n\r\n                setAuditLoading(false);\r\n            });\r\n        }\r\n    }, [checked, audits, auditLoading]);\r\n\r\n    const handleClick = () => setAuditLoading(true);\r\n\r\n    return (\r\n        <>\r\n\t\t    <Button \r\n                variant={buttonVariant} \r\n                size=\"lg\"\r\n                disabled={auditLoading}\r\n                onClick={!auditLoading ? handleClick : null}\r\n            >\r\n                Generate Text Audit\r\n            </Button>\r\n        </>\r\n\t);\r\n}","export  async function makeData(setData) {\r\n\r\n  let getURL = window.location.hostname;\r\n  \r\n  if(getURL === 'localhost' || getURL === '127.0.0.1'){\r\n    const url = 'http://' + getURL + ':8000/api/student_data';\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    const final_data = await data.map(row => {\r\n      \r\n      return row.fields\r\n   })\r\n  \r\n    return setData(final_data)\r\n  }\r\n\r\n    const url = 'http://' + getURL +'/api/student_data';\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    const final_data = await data.map(row => {\r\n      \r\n      return row.fields\r\n  })\r\n  \r\n    return setData(final_data)\r\n  \r\n  }\r\n\r\n  export async function makeTranscript(key, setData, settranscriptLoading) {\r\n\r\n    let getURL = window.location.hostname;\r\n    if(key.length !== 0){\r\n      if(getURL === 'localhost' || getURL === '127.0.0.1'){\r\n      \r\n        const url = \"http://\"+ getURL + \":8000/get_transcript/\" + key[1] + \"\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        settranscriptLoading(false)\r\n    \r\n        return setData(data);\r\n      }\r\n      else{\r\n        \r\n        const url = \"http://\"+ getURL + \"/get_transcript/\" + key[1] + \"\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n       \r\n        settranscriptLoading(false)\r\n        return setData(data);\r\n      }\r\n    \r\n    }\r\n\r\n\t}\r\n\r\n  \r\n  export async function InAppAudit(key, setData) {\r\n\r\n    let getURL = window.location.hostname;\r\n\r\n    let url = \"\";\r\n \r\n    if(key.length !== 0){\r\n      if(getURL === 'localhost' || getURL === '127.0.0.1'){\r\n        url = \"http://\"+ getURL + \":8000/audit_student/\" + key[1] + \"\";\r\n      }\r\n      else{\r\n        url = \"http://\"+ getURL + \"/audit_student/\" + key[1] + \"\";\r\n      }\r\n\r\n      let response = await fetch(url)\r\n      response = await response.json()\r\n\r\n      return setData(response);\r\n    }\r\n\t}","import React from \"react\";\r\nimport { matchSorter } from \"match-sorter\";\r\nexport function compareCourseCode(rowA, rowB, id, desc) {\r\n\tlet arr_A = rowA.values[id];\r\n\tarr_A = arr_A.split(\"*\");\r\n\t\r\n\tlet arr_B = rowB.values[id];\r\n\r\n\tarr_B = arr_B.split(\"*\");\r\n\t\r\n\tlet a = Number.parseFloat(arr_A[1]);\r\n\tlet b = Number.parseFloat(arr_B[1]);\r\n\tif (Number.isNaN(a)) {\r\n\t\t// Blanks and non-numeric strings to bottom\r\n\t\ta = desc ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\r\n\t}\r\n\tif (Number.isNaN(b)) {\r\n\t\tb = desc ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\r\n\t}\r\n\tif (a > b) return 1;\r\n\tif (a < b) return -1;\r\n\treturn 0;\r\n}\r\n\r\n\r\nexport function compareRank(rowA, rowB, id, desc) {\r\n\tlet arr_A = rowA.values[id];\r\n\t\r\n\r\n\tlet arr_B = rowB.values[id];\r\n\r\n\t\r\n\t\r\n\t\r\n\tlet a = 0\r\n\tlet b = 0\r\n\r\n\tif(arr_A === \"JUN\"){\r\n\t\ta = 1\r\n\t}else if(arr_A === \"SOP\"){\r\n\t\ta = 2\r\n\t}\r\n\telse if(arr_A === \"SEN\"){\r\n\t\ta = 3\r\n\t}\r\n\r\n\tif(arr_B === \"JUN\"){\r\n\t\tb = 1\r\n\r\n\t}else if(arr_B === \"SOP\"){\r\n\t\tb = 2\r\n\r\n\t}\r\n\telse if(arr_B === \"SEN\"){\r\n\t\tb = 3;\r\n\t\t\r\n\t}\r\n\t\r\n\tif (Number.isNaN(a)) {\r\n\t\t// Blanks and non-numeric strings to bottom\r\n\t\ta = desc ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\r\n\t}\r\n\tif (Number.isNaN(b)) {\r\n\t\tb = desc ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\r\n\t}\r\n\tif (a > b) return 1;\r\n\tif (a < b) return -1;\r\n\treturn 0;\r\n}\r\n\r\n// Define a filter for greater than\r\nexport function filterGreaterThan(rows, id, filterValue) {\r\n\treturn rows.filter((row) => {\r\n\t\tconst rowValue = row.values[id];\r\n\t\treturn rowValue >= filterValue;\r\n\t});\r\n}\r\n\r\n// Define a default UI for filtering\r\nexport function DefaultColumnFilter({\r\n\tcolumn: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n\tconst count = preFilteredRows.length;\r\n\r\n\treturn (\r\n\t\t<input\r\n\t\t\tvalue={filterValue || \"\"}\r\n\t\t\tonChange={(e) => {\r\n\t\t\t\tsetFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n\t\t\t}}\r\n\t\t\tplaceholder={`Search Records...`}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\nexport function NumberRangeColumnFilter({\r\n\tcolumn: { filterValue = [], preFilteredRows, setFilter, id },\r\n}) {\r\n\tconst [min, max] = React.useMemo(() => {\r\n\t\tlet min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n\t\tlet max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n\t\tpreFilteredRows.forEach((row) => {\r\n\t\t\tmin = Math.min(row.values[id], min);\r\n\t\t\tmax = Math.max(row.values[id], max);\r\n\t\t});\r\n\t\treturn [min, max];\r\n\t}, [id, preFilteredRows]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t}}>\r\n\t\t\t<input\r\n\t\t\t\tvalue={filterValue[0] || \"\"}\r\n\t\t\t\ttype='number'\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tconst val = e.target.value;\r\n\t\t\t\t\tsetFilter((old = []) => [\r\n\t\t\t\t\t\tval ? parseInt(val, 10) : undefined,\r\n\t\t\t\t\t\told[1],\r\n\t\t\t\t\t]);\r\n\t\t\t\t}}\r\n\t\t\t\tplaceholder={`Min (${min})`}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: \"70px\",\r\n\t\t\t\t\tmarginRight: \"0.5rem\",\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\tto\r\n\t\t\t<input\r\n\t\t\t\tvalue={filterValue[1] || \"\"}\r\n\t\t\t\ttype='number'\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tconst val = e.target.value;\r\n\t\t\t\t\tsetFilter((old = []) => [\r\n\t\t\t\t\t\told[0],\r\n\t\t\t\t\t\tval ? parseInt(val, 10) : undefined,\r\n\t\t\t\t\t]);\r\n\t\t\t\t}}\r\n\t\t\t\tplaceholder={`Max (${max})`}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: \"70px\",\r\n\t\t\t\t\tmarginLeft: \"0.5rem\",\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nexport function SelectColumnFilter({\r\n\tcolumn: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n\t// Calculate the options for filtering\r\n\t// using the preFilteredRows\r\n\tconst options = React.useMemo(() => {\r\n\t\tconst options = new Set();\r\n\t\tpreFilteredRows.forEach((row) => {\r\n\t\t\toptions.add(row.values[id]);\r\n\t\t});\r\n\t\treturn [...options.values()];\r\n\t}, [id, preFilteredRows]);\r\n\r\n\t// Render a multi-select box\r\n\treturn (\r\n\t\t<select\r\n\t\t\tvalue={filterValue}\r\n\t\t\tonChange={(e) => {\r\n\t\t\t\tsetFilter(e.target.value || undefined);\r\n\t\t\t}}>\r\n\t\t\t<option value=''>All</option>\r\n\t\t\t{options.map((option, i) => (\r\n\t\t\t\t<option key={i} value={option}>\r\n\t\t\t\t\t{option}\r\n\t\t\t\t</option>\r\n\t\t\t))}\r\n\t\t</select>\r\n\t);\r\n}\r\n\r\nexport function fuzzyTextFilterFn(rows, id, filterValue) {\r\n\treturn matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\r\n}\r\n","import React from \"react\";\r\nexport const CheckBox = React.forwardRef(({ indeterminate, ...rest }, ref) => {\r\n\tconst defaultRef = React.useRef();\r\n\tconst resolvedRef = ref || defaultRef;\r\n\r\n\tReact.useEffect(() => {\r\n\t\tresolvedRef.current.indeterminate = indeterminate;\r\n\t}, [resolvedRef, indeterminate]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<input type='checkbox' ref={resolvedRef} {...rest} />\r\n\t\t</>\r\n\t);\r\n});","// Our table component\r\nimport {\r\n\tfuzzyTextFilterFn,\r\n\tDefaultColumnFilter,\r\n} from \"../ColumnsFilters/Filters\";\r\nimport {\r\n\tuseTable,\r\n\tuseFilters,\r\n\tuseGlobalFilter,\r\n\tuseSortBy,\r\n\tuseRowSelect,\r\n\tuseAsyncDebounce,\r\n} from \"react-table\";\r\nimport React from \"react\";\r\n\r\nimport {\r\n\tCheckBox\r\n} from '../checkBox'\r\n\r\n\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = (val) => !val;\r\n\r\nexport function TableMasterList({\r\n\tcolumns,\r\n\tdata,\r\n\tmodalClose,\r\n\tmodalOpen,\r\n\tmodalState,\r\n\tselectKey,\r\n\tselectRow,\r\n\tupdateChecked,\r\n\tsetTranLoad\r\n}) {\r\n\tfunction enterAdvanced(row, cell) {\r\n\t\tif(cell.column.id !== \"selection\"){\r\n\t\t\tconst key = row.cells.map((cell) => {\r\n\t\t\t\tif (cell.column.id === \"student_number\") {\r\n\t\t\t\t\treturn cell.value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst name = row.cells.map((cell) => {\r\n\t\t\t\tif (cell.column.id === \"name\") {\r\n\t\t\t\t\treturn cell.value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst rank = row.cells.map((cell) => {\r\n\t\t\t\tif (cell.column.id === \"rank\") {\r\n\t\t\t\t\treturn cell.value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst program = row.cells.map((cell) => {\r\n\t\t\t\tif (cell.column.id === \"program\") {\r\n\t\t\t\t\treturn cell.value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst status = row.cells.map((cell) => {\r\n\t\t\t\tif (cell.column.id === \"status\") {\r\n\t\t\t\t\treturn cell.value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst campus = row.cells.map((cell) => {\r\n\t\t\t\tif (cell.column.id === \"campus\") {\r\n\t\t\t\t\treturn cell.value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetTranLoad(true)\r\n\t\t\tmodalOpen();\r\n\t\t\tselectRow({\r\n\t\t\t\tname: name,\r\n\t\t\t\tprogram: program,\r\n\t\t\t\tcampus: campus,\r\n\t\t\t\trank: rank,\r\n\t\t\t\tstatus: status,\r\n\t\t\t});\r\n\t\t\tselectKey(key);\r\n\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tconst filterTypes = React.useMemo(\r\n\t\t() => ({\r\n\t\t\t// Add a new fuzzyTextFilterFn filter type.\r\n\t\t\tfuzzyText: fuzzyTextFilterFn,\r\n\t\t\t// Or, override the default text filter to use\r\n\t\t\t// \"startWith\"\r\n\t\t\ttext: (rows, id, filterValue) => {\r\n\t\t\t\treturn rows.filter((row) => {\r\n\t\t\t\t\tconst rowValue = row.values[id];\r\n\t\t\t\t\treturn rowValue !== undefined\r\n\t\t\t\t\t\t? String(rowValue)\r\n\t\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t\t.startsWith(String(filterValue).toLowerCase())\r\n\t\t\t\t\t\t: true;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[]\r\n\t);\r\n\r\n\tconst defaultColumn = React.useMemo(\r\n\t\t() => ({\r\n\t\t\t// Let's set up our default Filter UI\r\n\t\t\tFilter: DefaultColumnFilter,\r\n\t\t}),\r\n\t\t[]\r\n\t);\r\n\r\n\tconst {\r\n\t\tgetTableProps,\r\n\t\tgetTableBodyProps,\r\n\t\theaderGroups,\r\n\t\trows,\r\n\t\tprepareRow,\r\n\t\tstate,\r\n\t\tselectedFlatRows,\r\n\t\tvisibleColumns,\r\n\t} = useTable(\r\n\t\t{\r\n\t\t\tcolumns,\r\n\t\t\tdata,\r\n\t\t\tdefaultColumn, // Be sure to pass the defaultColumn option\r\n\t\t\tfilterTypes,\r\n\t\t},\r\n\t\tuseFilters, // useFilters!\r\n\t\tuseGlobalFilter,\r\n\t\tuseSortBy,\r\n\t\tuseRowSelect,\r\n\t\t(hooks) => {\r\n\t\t\thooks.visibleColumns.push((columns) => {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: \"selection\",\r\n\t\t\t\t\t\tHeader: ({ getToggleAllRowsSelectedProps }) => (\r\n\t\t\t\t\t\t\t<div><CheckBox {...getToggleAllRowsSelectedProps()} /></div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tCell: ({ row }) => (\r\n\t\t\t\t\t\t\t<CheckBox {...row.getToggleRowSelectedProps()} />\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t...columns,\r\n\t\t\t\t];\r\n\t\t\t});\r\n\t\t}\r\n\t\t);// useGlobalFilter!\r\n\r\n\t// Update the list of checked students\r\n\tReact.useEffect(() => {\r\n\t\tlet SIDs = [];\r\n\t\tfor (const row of selectedFlatRows)\r\n\t\t{\r\n\t\t\trow.cells.map((cell) => {\r\n\t\t\t\tif (cell.column.id === \"student_number\") {\r\n\t\t\t\t\tSIDs.push(cell.value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tupdateChecked(SIDs);\r\n\r\n\t}, [selectedFlatRows]);\r\n\r\n\r\n\t// We don't want to render all of the rows for this example, so cap\r\n\t// it for this use case\r\n\tconst firstPageRows = rows;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<table className='styled-table' {...getTableProps()}>\r\n\t\t\t\t<thead >\r\n\t\t\t\t\t{headerGroups.map((headerGroup, index) => {\r\n\t\t\t\t\t\tif(index > 0){\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t<tr  {...headerGroup.getHeaderGroupProps()}>\r\n\t\t\t\t\t\t\t{headerGroup.headers.map((column) => (\r\n\t\t\t\t\t\t\t\t<th  {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n\t\t\t\t\t\t\t\t\t{column.render(\"Header\")}\r\n\t\t\t\t\t\t\t\t\t{/* Render the columns filter UI */}\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t{column.canFilter ? column.render(\"Filter\") : null}\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t{column.isSorted\r\n\t\t\t\t\t\t\t\t\t\t\t\t? column.isSortedDesc\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"🔽\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"🔼\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"\"}{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody {...getTableBodyProps()}>\r\n\t\t\t\t\t{firstPageRows.map((row, i) => {\r\n\t\t\t\t\t\tprepareRow(row);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\tclassName='List_Row'\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{...row.getRowProps()}>\r\n\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<td onClick={() => enterAdvanced(row, cell)} className='table-td-cell' {...cell.getCellProps()}>\r\n\t\t\t\t\t\t\t\t\t\t\t{cell.render(\"Cell\")}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t<pre>\r\n\t\t\t\t\t<div> {\r\n\t\t\t\t\tselectedFlatRows.map((row, index) =>{\r\n\t\t\t\t\t\tprepareRow(row);\r\n\t\t\t\t\t\tif(index === 0){\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<tr><td></td> <td style = {{padding: \"10px\"}}>Student Number</td><td style = {{padding: \"10px\"}}>Name</td><td style = {{padding: \"10px\"}}>Program</td><td style = {{padding: \"10px\"}}>Campus</td><td style = {{padding: \"10px\"}}>Rank</td><td style = {{padding: \"10px\"}}>status</td></tr>\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tstyle ={{padding:\"15px\"}}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{...row.getRowProps()}>  \r\n\t\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<td onClick={() => enterAdvanced(row, cell)} style = {{padding: \"15px\"}} {...cell.getCellProps()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{cell.render(\"Cell\")}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tr>  </>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tstyle ={{padding:\"15px\"}}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{...row.getRowProps()}>  \r\n\t\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<td onClick={() => enterAdvanced(row, cell)} style = {{padding: \"15px\"}} {...cell.getCellProps()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{cell.render(\"Cell\")}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</pre>\r\n\t\t\t<br />\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport {\r\n\tfilterGreaterThan,\r\n\tNumberRangeColumnFilter,\r\n\tSelectColumnFilter,\r\n\tcompareCourseCode,\r\n\tcompareRank\r\n} from \"./Filters\";\r\n\r\n// To Do: UseMemo Columns\r\nexport const columns = [\r\n\t{\r\n\t\tHeader: \" \",\r\n\t\tcolumns: [\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Student ID\",\r\n\t\t\t\taccessor: \"student_number\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Name\",\r\n\t\t\t\taccessor: \"name\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Program\",\r\n\t\t\t\taccessor: \"program\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Campus\",\r\n\t\t\t\taccessor: \"campus\",\r\n\t\t\t\tFilter: SelectColumnFilter,\r\n\t\t\t\tfilter: \"includes\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Rank\",\r\n\t\t\t\taccessor: \"rank\",\r\n\t\t\t\tsortType: compareRank,\r\n\t\t\t\tFilter: SelectColumnFilter,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Status\",\r\n\t\t\t\taccessor: \"status\",\r\n\t\t\t\tFilter: SelectColumnFilter,\r\n\t\t\t}\r\n\t\t],\r\n\t},\r\n];\r\n\r\nexport const columnsTranscripts = [\r\n\t{\r\n\t\tHeader: \" \",\r\n\t\tcolumns: [\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Course Code\",\r\n\t\t\t\taccessor: \"Course_Code\",\r\n\t\t\t\tsortType: compareCourseCode, // custom function\r\n\t\t\t\tdisableFilters: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Course Name\",\r\n\t\t\t\taccessor: \"Course_Name\",\r\n\t\t\t\tdisableFilters: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Course Type\",\r\n\t\t\t\taccessor: \"Course_Type\",\r\n\t\t\t\tdisableFilters: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Semester\",\r\n\t\t\t\taccessor: \"Semester\",\r\n\t\t\t\tdisableFilters: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Section\",\r\n\t\t\t\taccessor: \"Section\",\r\n\t\t\t\tfilter: \"includes\",\r\n\t\t\t\tdisableFilters: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Credit Hours\",\r\n\t\t\t\taccessor: \"Credit_Hours\",\r\n\t\t\t\tdisableFilters: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: \"Grade\",\r\n\t\t\t\taccessor: \"Grade\",\r\n\t\t\t\tdisableFilters: true,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n","import {\r\n\tfuzzyTextFilterFn,\r\n\tDefaultColumnFilter,\r\n} from \"../ColumnsFilters/Filters\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport {\r\n\tuseTable,\r\n\tuseFilters,\r\n\tuseGlobalFilter,\r\n\tuseSortBy,\r\n\tuseAsyncDebounce,\r\n} from \"react-table\";\r\nimport React from \"react\";\r\n\r\nexport function TableTranscript({\r\n\tcolumns,\r\n\tdata,\r\n\tmodalClose,\r\n\tmodalOpen,\r\n\tmodalState,\r\n\tselectKey,\r\n\tselectName,\r\n}) {\r\n\tconst filterTypes = React.useMemo(\r\n\t\t() => ({\r\n\t\t\t// Add a new fuzzyTextFilterFn filter type.\r\n\t\t\tfuzzyText: fuzzyTextFilterFn,\r\n\t\t\t// Or, override the default text filter to use\r\n\t\t\t// \"startWith\"\r\n\t\t\ttext: (rows, id, filterValue) => {\r\n\t\t\t\treturn rows.filter((row) => {\r\n\t\t\t\t\tconst rowValue = row.values[id];\r\n\t\t\t\t\treturn rowValue !== undefined\r\n\t\t\t\t\t\t? String(rowValue)\r\n\t\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t\t.startsWith(String(filterValue).toLowerCase())\r\n\t\t\t\t\t\t: true;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[]\r\n\t);\r\n\r\n\tconst {\r\n\t\tgetTableProps,\r\n\t\tgetTableBodyProps,\r\n\t\theaderGroups,\r\n\t\trows,\r\n\t\tprepareRow,\r\n\t\tstate,\r\n\t\tvisibleColumns,\r\n\t} = useTable(\r\n\t\t{\r\n\t\t\tcolumns,\r\n\t\t\tdata,\r\n\t\t\t// Be sure to pass the defaultColumn option\r\n\t\t\tfilterTypes,\r\n\t\t},\r\n\t\tuseFilters, // useFilters!\r\n\t\tuseGlobalFilter,\r\n\t\tuseSortBy // useGlobalFilter!\r\n\t);\r\n\r\n\t// We don't want to render all of the rows for this example, so cap\r\n\t// it for this use case\r\n\tconst firstPageRows = rows;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table className='styled-transcript' {...getTableProps()}>\r\n\t\t\t\t<thead className='styled-transcript-thead'>\r\n\t\t\t\t\t{headerGroups.map((headerGroup) => (\r\n\t\t\t\t\t\t<tr {...headerGroup.getHeaderGroupProps()}>\r\n\t\t\t\t\t\t\t{headerGroup.headers.map((column) => (\r\n\t\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\t\tclassName='transcript_head'\r\n\t\t\t\t\t\t\t\t\t{...column.getHeaderProps(column.getSortByToggleProps())}>\r\n\t\t\t\t\t\t\t\t\t{column.render(\"Header\")}\r\n\t\t\t\t\t\t\t\t\t{/* Render the columns filter UI */}\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t{column.canFilter ? column.render(\"Filter\") : null}\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t{column.isSorted\r\n\t\t\t\t\t\t\t\t\t\t\t\t? column.isSortedDesc\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"🔽\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"🔼\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"\"}{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th colSpan={visibleColumns.length}></th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody className='styled-transcript-tbody' {...getTableBodyProps()}>\r\n\t\t\t\t\t{firstPageRows.map((row, i) => {\r\n\t\t\t\t\t\tprepareRow(row);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<tr {...row.getRowProps()}>\r\n\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<td className='transcript_cell' {...cell.getCellProps()}>\r\n\t\t\t\t\t\t\t\t\t\t\t{cell.render(\"Cell\")}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t\t<br />\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from 'react'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const AuditCSE = ({CSEData}) => {\r\n\r\n    let CSEDataIN = CSEData\r\n\r\n    let courseTypes = []\r\n\r\n    let styles = {\r\n        outterMostDiv: {\r\n            float: \"left\",\r\n            padding: \"15px\"\r\n        }\r\n    }\r\n\r\nif(CSEDataIN[\"CSE-HSS\"].completed.courses.length != 0 || CSEDataIN[\"CSE-HSS\"].in_progress.courses.length != 0) {\r\n    \r\n   \r\n    let courseType = {\r\n        type: \"CSE_HSS\",\r\n        inProgress: [],\r\n        credit_hours: 0,\r\n        completed: []\r\n\r\n\r\n    }\r\n    \r\n    if(CSEDataIN[\"CSE-HSS\"].completed.courses.length != 0){\r\n        courseType.completed.push(...CSEDataIN[\"CSE-HSS\"].completed.courses)\r\n        courseType.credit_hours += CSEDataIN[\"CSE-HSS\"].completed.credit_hours\r\n\r\n    }\r\n    if(CSEDataIN[\"CSE-HSS\"].in_progress.courses.length != 0){\r\n\r\n        courseType.completed.push(...CSEDataIN[\"CSE-HSS\"].in_progress.courses)\r\n        courseType.credit_hours += CSEDataIN[\"CSE-HSS\"].in_progress.credit_hours\r\n    }\r\n   \r\n\r\n    courseTypes.push(courseType)\r\n \r\n}\r\n   \r\nif(CSEDataIN[\"CSE-OPEN\"].completed.courses.length != 0 || CSEDataIN[\"CSE-OPEN\"].in_progress.courses.length != 0) {\r\n\r\n    let courseType = {\r\n        type: \"CSE-OPEN\",\r\n        inProgress: [],\r\n        credit_hours: 0,\r\n        completed: []\r\n\r\n\r\n    }\r\n    \r\n    if(CSEDataIN[\"CSE-OPEN\"].completed.courses.length != 0){\r\n        courseType.completed.push(...CSEDataIN[\"CSE-OPEN\"].completed.courses)\r\n        courseType.credit_hours += CSEDataIN[\"CSE-OPEN\"].completed.credit_hours\r\n\r\n    }\r\n    if(CSEDataIN[\"CSE-OPEN\"].in_progress.courses.length != 0){\r\n\r\n        courseType.completed.push(...CSEDataIN[\"CSE-OPEN\"].in_progress.courses)\r\n        courseType.credit_hours += CSEDataIN[\"CSE-OPEN\"].in_progress.credit_hours\r\n    }\r\n   \r\n\r\n    courseTypes.push(courseType)\r\n    \r\n    \r\n}\r\n\r\nif(CSEDataIN[\"CSE-ITS\"].completed.courses.length != 0 || CSEDataIN[\"CSE-ITS\"].in_progress.courses.length != 0) {\r\n\r\n    let courseType = {\r\n        type: \"CSE-ITS\",\r\n        inProgress: [],\r\n        credit_hours: 0,\r\n        completed: []\r\n\r\n\r\n    }\r\n    \r\n    if(CSEDataIN[\"CSE-ITS\"].completed.courses.length != 0){\r\n        courseType.completed.push(...CSEDataIN[\"CSE-ITS\"].completed.courses)\r\n        courseType.credit_hours += CSEDataIN[\"CSE-ITS\"].completed.credit_hours\r\n\r\n    }\r\n    if(CSEDataIN[\"CSE-ITS\"].in_progress.courses.length != 0){\r\n\r\n        courseType.completed.push(...CSEDataIN[\"CSE-ITS\"].in_progress.courses)\r\n        courseType.credit_hours += CSEDataIN[\"CSE-ITS\"].in_progress.credit_hours\r\n    }\r\n   \r\n\r\n    courseTypes.push(courseType)\r\n \r\n} \r\n    return (\r\n        <>\r\n    {\r\n        courseTypes.map((item, index)=> {\r\n            return <div style = {styles.outterMostDiv}><p>{item.type} &nbsp; {item.inProgress.length + item.completed.length}\r\n           &nbsp; ({item.credit_hours}ch) {item.inProgress.map((item)=> {\r\n               return <p>{item} inprogress </p>\r\n           })} \r\n           \r\n           {item.completed.map((item)=> {\r\n               return <p> {item} completed</p>\r\n           })} \r\n           </p></div>\r\n        })\r\n    }\r\n        </>\r\n    );\r\n\r\n} ","import {InAppAudit} from '../makeData'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport { AuditCSE } from \"./AuditCSE\";\r\n\r\nexport const Audit = ({ data }) => {\r\n\t\r\n\r\n\tconst styles = {\r\n\t\tCourseCode: {\r\n\t\t\tdisplay: \"inline-block\",\r\n\t\t\tfont: \"sans-serif\",\r\n\t\t\tfontSize: \"18px\",\r\n\t\t\twordBreak: \"keep-all\",\r\n\t\t},\r\n\t\tdiv_style: {\r\n\t\t\tboxShadow: \"1px 3px 1px #9E9E9E\",\r\n            \r\n\t\t},\r\n\t\tCourseHeaders: {\r\n\t\t\tfont: \"sans-serif\",\r\n\t\t\tfontSize: \"20px\",\r\n            paddingBottom: \"15px\",\r\n            paddingTop: \"15px\"\r\n\t\t},\r\n\t\tParent_Div: {\r\n\t\t\r\n\t\t},\r\n\t};\r\n\r\n\r\n    let progress = data.progress\r\n   \r\n\treturn (\r\n\t\t<div style={styles.Parent_Div}>\r\n\t\t\t<div>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tAudit: {data.target_student.student_number}, &nbsp;\r\n\t\t\t\t\t{data.target_student.cohort},&nbsp;{\" \"}\r\n\t\t\t\t\t{data.target_student.rank}, &nbsp;years in:{\" \"}\r\n\t\t\t\t\t{data.target_student.years_in}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<p>Based on: {data.base_program}</p>{\" \"}\r\n\t\t\t</div>\r\n\t\t\t<div>&nbsp;STATUS:&nbsp;{data.target_student.status}</div>\r\n\t\t\t<div style={styles.div_style}>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tProgress through CORE&nbsp;({\" \"}\r\n\t\t\t\t\t{progress.CORE.completed.courses.length +\r\n\t\t\t\t\t\tprogress.CORE.remaining.courses.length +\r\n\t\t\t\t\t\tprogress.CORE.in_progress.courses.length}\r\n\t\t\t\t\t&nbsp;courses,{\" \"}\r\n\t\t\t\t\t{progress.CORE.completed.credit_hours +\r\n\t\t\t\t\t\tprogress.CORE.remaining.credit_hours +\r\n\t\t\t\t\t\tprogress.CORE.in_progress.credit_hours}\r\n\t\t\t\t\t&nbsp;CH)&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t{progress.CORE.remaining.courses.length}&nbsp;courses (\r\n\t\t\t\t\t{progress.CORE.remaining.credit_hours}CH)&nbsp; REMAINING\r\n\t\t\t\t</p>{\" \"}\r\n\t\t\t</div>\r\n\t\t\t<div style={styles.CourseHeaders}>\r\n\t\t\t\tCore Courses completed: &nbsp;&nbsp;&nbsp;\r\n\t\t\t\t{progress.CORE.completed.courses.length}&nbsp; courses\r\n\t\t\t\t&nbsp;({progress.CORE.completed.credit_hours}CH)&nbsp;\r\n\t\t\t</div>\r\n\t\t\t<lu>\r\n\t\t\t\t{progress.CORE.completed.courses.map((course) => {\r\n\t\t\t\t\treturn <li style={styles.CourseCode}>&nbsp;{course}</li>;\r\n\t\t\t\t})}\r\n\t\t\t</lu>\r\n\t\t\t<div style={styles.CourseHeaders}>\r\n\t\t\t\tCore Courses in progress: &nbsp;&nbsp;&nbsp;\r\n\t\t\t\t{progress.CORE.in_progress.courses.length}&nbsp; courses\r\n\t\t\t\t&nbsp;({progress.CORE.in_progress.credit_hours}CH)&nbsp;\r\n\t\t\t</div>\r\n\t\t\t<lu>\r\n\t\t\t\t{progress.CORE.in_progress.courses.map((course) => {\r\n\t\t\t\t\treturn <li style={styles.CourseCode}>&nbsp;{course}</li>;\r\n\t\t\t\t})}\r\n\t\t\t</lu>\r\n\t\t\t<div style={styles.CourseHeaders}>\r\n\t\t\t\tCore Courses remaining: &nbsp;&nbsp;&nbsp;\r\n\t\t\t\t{progress.CORE.remaining.courses.length}&nbsp; courses\r\n\t\t\t\t&nbsp;({progress.CORE.remaining.credit_hours}CH)&nbsp;\r\n\t\t\t</div>\r\n\t\t\t<lu>\r\n\t\t\t\t{progress.CORE.remaining.courses.map((course) => {\r\n\t\t\t\t\treturn <li style={styles.CourseCode}>&nbsp;{course}</li>;\r\n\t\t\t\t})}\r\n\t\t\t</lu>\r\n\t\t\t<div style={styles.div_style}>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tProgress through TE&nbsp;({\" \"}\r\n\t\t\t\t\t{progress.TE.completed.courses.length +\r\n\t\t\t\t\t\tprogress[\"TE\"].remaining.num_courses +\r\n\t\t\t\t\t\tprogress.TE.in_progress.courses.length}\r\n\t\t\t\t\t&nbsp;courses,{\" \"}\r\n\t\t\t\t\t{progress.TE.completed.credit_hours +\r\n\t\t\t\t\t\tprogress.TE.remaining.credit_hours +\r\n\t\t\t\t\t\tprogress.TE.in_progress.credit_hours}\r\n\t\t\t\t\t&nbsp;CH)&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t{progress.TE.remaining.num_courses}&nbsp;courses (\r\n\t\t\t\t\t{progress.TE.remaining.credit_hours}CH)&nbsp; REMAINING\r\n\t\t\t\t</p>{\" \"}\r\n\t\t\t</div>\r\n\t\t\t<div style={styles.CourseHeaders}>\r\n\t\t\t\tTE Courses completed: &nbsp;&nbsp;&nbsp;\r\n\t\t\t\t{progress.TE.completed.courses.length}&nbsp; courses &nbsp;(\r\n\t\t\t\t{progress.TE.completed.credit_hours}CH)&nbsp;\r\n\t\t\t</div>\r\n\t\t\t<lu>\r\n\t\t\t\t{progress.TE.completed.courses.map((course) => {\r\n\t\t\t\t\treturn <li style={styles.CourseCode}>&nbsp;{course}</li>;\r\n\t\t\t\t})}\r\n\t\t\t</lu>\r\n\t\t\t<div style={styles.CourseHeaders}>\r\n\t\t\t\tTE Courses in progress: &nbsp;&nbsp;&nbsp;\r\n\t\t\t\t{progress.TE.in_progress.courses.length}&nbsp; courses\r\n\t\t\t\t&nbsp;({progress.TE.in_progress.credit_hours}CH)&nbsp;\r\n\t\t\t</div>\r\n\t\t\t<lu>\r\n\t\t\t\t{progress.TE.in_progress.courses.map((course) => {\r\n\t\t\t\t\treturn <li style={styles.CourseCode}>&nbsp;{course}</li>;\r\n\t\t\t\t})}\r\n\t\t\t</lu>{\" \"}\r\n\t\t\t<div style={styles.div_style}>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tProgress through NS&nbsp;({\" \"}\r\n\t\t\t\t\t{progress.NS.completed.courses.length +\r\n\t\t\t\t\t\tprogress.NS.remaining.num_courses +\r\n\t\t\t\t\t\tprogress.NS.in_progress.courses.length}\r\n\t\t\t\t\t&nbsp;courses,{\" \"}\r\n\t\t\t\t\t{progress.NS.completed.credit_hours +\r\n\t\t\t\t\t\tprogress.NS.remaining.credit_hours +\r\n\t\t\t\t\t\tprogress.NS.in_progress.credit_hours}\r\n\t\t\t\t\t&nbsp;CH)&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t{progress.NS.remaining.num_courses}&nbsp;courses (\r\n\t\t\t\t\t{progress.NS.remaining.credit_hours}CH)&nbsp; REMAINING\r\n\t\t\t\t</p>{\" \"}\r\n\t\t\t</div>\r\n\t\t\t<div style={styles.CourseHeaders}>\r\n\t\t\t\tNS Courses completed: &nbsp;&nbsp;&nbsp;\r\n\t\t\t\t{progress.NS.completed.courses.length}&nbsp; courses &nbsp;(\r\n\t\t\t\t{progress.NS.completed.credit_hours}CH)&nbsp;\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{progress.NS.completed.courses.map((course) => {\r\n\t\t\t\t\treturn <li style={styles.CourseCode}>&nbsp;{course}</li>;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div style={styles.CourseHeaders}>\r\n\t\t\t\tNS Courses in progress: &nbsp;&nbsp;&nbsp;\r\n\t\t\t\t{progress.NS.in_progress.courses.length}&nbsp; courses\r\n\t\t\t\t&nbsp;({progress.NS.in_progress.credit_hours}CH)&nbsp;\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{progress.NS.in_progress.courses.map((course) => {\r\n\t\t\t\t\treturn <li style={styles.CourseCode}>&nbsp;{course}</li>;\r\n\t\t\t\t})}\r\n\t\t\t</div>{\" \"}\r\n\t\t\t<div style={styles.div_style}>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tProgress through CSE&nbsp;({\" \"}\r\n\t\t\t\t\t{progress[\"CSE-ITS\"].completed.courses.length}{\" \"}\r\n\t\t\t\t\t&nbsp;ITS,&nbsp;\r\n\t\t\t\t\t{progress[\"CSE-HSS\"].completed.courses.length}{\" \"}\r\n\t\t\t\t\t&nbsp;HSS,&nbsp;\r\n\t\t\t\t\t{progress[\"CSE-OPEN\"].completed.courses.length} &nbsp;OPEN\r\n\t\t\t\t\t&nbsp;;{\" \"}\r\n\t\t\t\t\t{progress[\"CSE-HSS\"].completed.credit_hours +\r\n\t\t\t\t\t\tprogress[\"CSE-OPEN\"].completed.credit_hours +\r\n\t\t\t\t\t\tprogress[\"CSE-ITS\"].completed.credit_hours}\r\n\t\t\t\t\t&nbsp;CH)&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t{progress[\"CSE-ITS\"].remaining.num_courses\r\n\t\t\t\t\t}\r\n\t\t\t\t\t&nbsp;courses ({progress[\"CSE-ITS\"].remaining.credit_hours}\r\n\t\t\t\t\tCH)&nbsp; REMAINING\r\n\t\t\t\t</p>{\" \"}\r\n\t\t\t</div>\r\n\t\t\t<AuditCSE CSEData={progress}></AuditCSE>\r\n\t\t</div>\r\n\t);\r\n};","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Counts from \"./counts\";\r\nimport TextAuditButton from \"./textAudits\"\r\n// A great library for fuzzy filtering/sorting items\r\n\r\nimport \"./App.css\";\r\nimport { makeData, makeTranscript } from \"./makeData\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { TableMasterList } from \"./Tables/MasterList\";\r\n\r\nimport { columns } from \"./ColumnsFilters/Columns\";\r\nimport { transcriptModal } from \"./Modal/TranscriptModal\";\r\n\r\nimport { Button, Nav } from \"react-bootstrap\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { TableTranscript } from \"./Tables/Transcript\";\r\nimport { columnsTranscripts } from \"./ColumnsFilters/Columns\";\r\nimport {Audit} from './Tables/InAppAudit'\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport {InAppAudit} from './makeData'\r\nimport Loader from \"react-loader-spinner\";\r\nimport axios from \"axios\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\n// async function  fetchData(advancedKey,setAuditData, setTranscriptData ) {\r\n// \tlet getURL = window.location.hostname;\r\n\t\r\n\t\r\n// \tconst TranscriptURL = ''\r\n// \tconst AuditURL = ''\r\n\r\n// \tconst trans = axios.get(TranscriptURL)\r\n// \tconst audit = axios.get(AuditURL)\r\n\r\n// \taxios.all([trans, audit]).then(\r\n// \t\taxios.spread((...allData)=> {\r\n\r\n// \t\t})\r\n// \t)\r\n\r\n\r\n\r\n// \tlet getURL = window.location.hostname;\r\n//     if(key.length !== 0){\r\n//       if(getURL === 'localhost' || getURL === '127.0.0.1'){\r\n      \r\n//         const url = \"http://\"+ getURL + \":8000/get_transcript/\" + key[1] + \"\";\r\n\r\n// \t\tconst TranscriptURL = 'http://\"+ getURL + \":8000/get_transcript/\" + key[1] + \"'\r\n// \t\tconst AuditURL = ''\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         settranscriptLoading(false)\r\n    \r\n//         return setData(data);\r\n//       }\r\n//       else{\r\n        \r\n//         const url = \"http://\"+ getURL + \"/get_transcript/\" + key[1] + \"\";\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n       \r\n//         settranscriptLoading(false)\r\n//         return setData(data);\r\n//       }\r\n    \r\n//     }\r\n// }\r\n\r\n\r\nfunction App() {\r\n\tconst [data, setData] = React.useState([]);\r\n\tconst [TranscriptData, setTranscriptData] = React.useState([]);\r\n\tconst [showAudit, setShowAudit] = React.useState(false);\r\n\tconst [advancedKey, advancedKeySet] = React.useState([]);\r\n\tconst [transcriptLoading, settranscriptLoading] = React.useState(false)\r\n\tconst [isActive, setisActive] = React.useState(false);\r\n\tconst [auditLoading, setauditLoading] = React.useState(true)\r\n\tconst [transcriptInfo, setTranscriptInfo] = React.useState({\r\n\t\tname: '',\r\n\t\tprogram: '',\r\n\t\tcampus: '',\r\n\t\trank: '',\r\n\t\tstatus: '',\r\n\t});\r\n\r\n\t// Holds a list of student numbers for the currently checked rows within the master list\r\n\tconst [checkedSIDs, setCheckedSIDs] = React.useState([]);\r\n\t\r\n\tconst [modalShow, setModalShow] = React.useState(false);\r\n\tconst handleClose = () => setModalShow(false);\r\n\tconst handleShow = () => setModalShow(true);\r\n\tconst handleShowAudit = () => setShowAudit(true);\r\n\tconst handleCloseAudit = () => setShowAudit(false);\r\n\r\n\r\n\tReact.useEffect(() => {\r\n\t\t(async () => {\r\n\t\t\tawait makeData(setData);\r\n\t\t})();\r\n\t}, []);\r\n\r\n\r\n\tconst [auditData, setAuditData] = React.useState({})\r\n   \r\n\r\n    React.useEffect(() => {\r\n\t\t(async () => {\r\n\t\t\tawait InAppAudit(advancedKey,setAuditData);\r\n\t\t\tawait makeTranscript(advancedKey, setTranscriptData, settranscriptLoading);\r\n\t\t})();\r\n\r\n\t\t\r\n\t}, [advancedKey]);\r\n\r\n\r\n\tfunction handleTabs(eventKey) {\r\n\t\t\r\n\t\tif(eventKey === false){\r\n\t\t\tsetShowAudit(false)\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetShowAudit(true)\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction Transcript({audit}) {\r\n\t\r\n\t\tif(!audit && !transcriptLoading){\r\n\t\t\treturn( <>\r\n\t\t\t\t\r\n\t\t\t   <Modal\r\n\t\t\t\t\t\tshow={modalShow}\r\n\t\t\t\t\t\tonHide={handleClose}\r\n\t\t\t\t\t\taria-labelledby='example-modal-sizes-title-lg'\r\n\t\t\t\t\t\tsize='xl'>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Button  size=\"lg\" variant='outline-secondary'  onClick = {() => setShowAudit(false)}>Transcript</Button>\r\n\t\t\t\t\t\t<Button  size=\"lg\" variant='outline-secondary'  onClick = {() => setShowAudit(true)}>Audit</Button>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<div className='row_modal'>\r\n\t\t\t\t   <div className='column_modal'>\r\n\t\t\t\t\t   <TableTranscript\r\n\t\t\t\t\t\t   columns={columnsTranscripts}\r\n\t\t\t\t\t\t   data={TranscriptData}></TableTranscript>\r\n\t\t\t\t   </div>\r\n\t\t\t\t   <div className='column_modal'>\r\n\t\t\t\t\t   <h1 style={{ fontFamily: \"sans-serif\" }}>{transcriptInfo.name}</h1>\r\n\t\t\t\t\t   <br />\r\n\t\t\t\t\t   <h4 style={{ fontFamily: \"sans-serif\" }}>{advancedKey}</h4>\r\n\t\t\t\t\t   \r\n\t\t\t\t\t   <h4 style={{ fontFamily: \"sans-serif\" }}>{transcriptInfo.program}</h4>\r\n\t\t\t\t\t   \r\n\t\t\t\t\t   <h4 style={{ fontFamily: \"sans-serif\" }}>{transcriptInfo.campus}</h4>\r\n\t\t\t\t\t   \r\n\t\t\t\t\t   <h4 style={{ fontFamily: \"sans-serif\" }}>{transcriptInfo.rank}</h4>\r\n\t\t\t\t\t   \r\n\t\t\t\t\t   <h4 style={{ fontFamily: \"sans-serif\" }}>{transcriptInfo.status}</h4>\r\n\t\t\t\t\t   \r\n\t\t\t\t   </div>\r\n\t\t\t   </div> \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant='secondary' onClick={handleClose}>\r\n\t\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t   </> );\r\n\t\t}\r\n\t\telse if(audit ){\r\n\t\t\treturn (\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<Modal\r\n\t\t\t\t\t\tshow={modalShow}\r\n\t\t\t\t\t\tonHide={handleClose}\r\n\t\t\t\t\t\taria-labelledby='example-modal-sizes-title-lg'\r\n\t\t\t\t\t\tsize='xl'>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Button  size=\"lg\" variant='outline-secondary'  onClick = {() => setShowAudit(false)}>Transcript</Button>\r\n\t\t\t\t\t\t<Button  size=\"lg\" variant='outline-secondary'  onClick = {() => setShowAudit(true)}>Audit</Button>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div style = {{boxShadow: \"1px 3px 1px #9E9E9E\", display: \"inline-block\"}}>\r\n\t\t\t\t\t\t\t<TextAuditButton checked={[advancedKey[1]]} buttonVariant='outline-secondary'></TextAuditButton>\r\n\t\t\t\t\t\t\t<Audit data = {auditData} ></Audit>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant='secondary' onClick={handleClose}>\r\n\t\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Modal>);\r\n\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn (\r\n\t\t\t\t<Modal\r\n\t\t\t\t\t\tshow={modalShow}\r\n\t\t\t\t\t\tonHide={handleClose}\r\n\t\t\t\t\t\taria-labelledby='example-modal-sizes-title-lg'\r\n\t\t\t\t\t\tsize='xl'>\r\n\t\t\t\t\t\t<div className=\"spin\"></div>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='master-container'>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t<div className='div-table'>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Transcript audit = {showAudit}></Transcript>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<TableMasterList\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\tmodalClose={handleClose}\r\n\t\t\t\t\t\tmodalOpen={handleShow}\r\n\t\t\t\t\t\tmodalState={modalShow}\r\n\t\t\t\t\t\tselectKey={advancedKeySet}\r\n\t\t\t\t\t\tselectRow={setTranscriptInfo}\r\n\t\t\t\t\t\tupdateChecked={setCheckedSIDs}\r\n\t\t\t\t\t\tsetTranLoad={settranscriptLoading}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* <Nav variant=\"tabs\"  onSelect={(e)=>setShowAudit(e)} >\r\n\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t<Nav.Link eventKey= {false}>Transcript</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t<Nav.Link eventKey= {true}>Audit</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Nav> */}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='div-textAudit'>\r\n\t\t\t\t\t<TextAuditButton checked={checkedSIDs} buttonVariant='danger'></TextAuditButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='div-counts'>\r\n\t\t\t\t\t<Counts></Counts>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\r\n    <App />,\r\n \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}